[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vcf-copilot"
version = "0.1.0"
description = "Clinical Genomics Copilot for VCF variant interpretation"
authors = [{name = "Clinical Genomics Team", email = "team@example.com"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "typer>=0.9.0",
    "rich>=13.0.0",
    "pydantic>=2.0.0",
    "jinja2>=3.1.0",
    "requests>=2.31.0",
    "httpx>=0.24.0",
    "cyvcf2>=0.30.0",
    "pysam>=0.21.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
]
llm = [
    "openai>=1.0.0",
]

[project.scripts]
vcf-copilot = "vcf_copilot.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["vcf_copilot*"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=vcf_copilot --cov-report=term-missing" 